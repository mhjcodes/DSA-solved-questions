#include<vector>
#define MOD 1000000007
long long int solve(int n, vector<long long int> &dp){
    // base case
    if(n == 1)
    return 0;
    if(n ==2)
    return 1;

    if(dp[n] != -1)
    return dp[n];

    dp[n] = ((n-1)*(solve(n-1,dp)+solve(n-2,dp)))%MOD;
    return dp[n];
}
long long int solveTab(int n, vector<long long int> &dp){
    dp[1] = 0;
    dp[2] = 1;

    for(int i=3; i<=n; i++){
        dp[i] = ((i-1)*(dp[i-1] + dp[i-2]))% MOD;
    }
    return dp[n];
}
long long int solveOpt(int n){
    long long int  prev2 = 0;
    long long int  prev1 = 1;

    for(int i =3; i<=n ; i++){
        long long int curr = ((i-1)*(prev1 + prev2))%MOD;
        //shift logic
        prev2 = prev1;
        prev1 = curr;
    }
    return prev1;
}
long long int countDerangements(int n) {
/*
    vector<long long int> dp(n+1, -1);
    //long long int ans = solve( n, dp);
    long long int ans = solveTab(n, dp);
    return ans;
*/
    return solveOpt(n);

}
