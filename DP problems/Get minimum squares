class Solution{
	public:
	int solve(int n, vector<int> &dp){
	    // base case
	    if(n == 0)
	    return 0;
	    if(n < 0)
	    return INT_MAX;
	    
	    if(dp[n] != -1)
	    return dp[n];
	    
	    int mini = INT_MAX;
	    for(int i=1; i*i<= n; i++){
	        int ans = solve(n-(i*i), dp);
	        if(ans != INT_MAX)
	        mini = min(mini, 1+ans);
	    }
	    dp[n]=mini;
	    return dp[n];
	}
	int solveTab(int n, vector<int> &dp){
	    dp[0] = 0;
	    for(int i=1; i<=n; i++){
	        for(int j=1; j*j<=n; j++){
	            if((i-(j*j)) >= 0 && dp[i-(j*j)] != INT_MAX)
	            dp[i] = min(dp[i],1+dp[i-(j*j)]);
	        }
	    }
	    return dp[n];
	}
	int MinSquares(int n)
	{
	    //vector<int> dp(n+1, -1);
	   //return solve(n, dp);
	    
	    vector<int> dp(n+1, INT_MAX);
	    return solveTab(n, dp)
	}
};
